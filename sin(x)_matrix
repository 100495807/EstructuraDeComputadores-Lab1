.text
SinMatrix:
    # Carga las direcciones de memoria de las matrices, N y M. Los datos deberian venir del .data
    la   t0, A    # Carga la dirección de matriz A en t0
    la   t1, B    # Carga la dirección de matriz B en t1
    la   t2, N          # Inicializa t2 con N (filas)
    la   t3, M          # Inicializa t3 con M (columnas)
    lw   t2, 0(t2)          
    lw   t3, 0(t3)
    add  t4, zero, zero # Inicializa t4 con 0 (contador)
    add  t5, zero, zero # Inicializa t5 con 0 (contador)
    
loop1_m:  
    # Comprueba si t2 es igual a t4, si es así, salta al final de loop1
    beq  t2, t4, end1_m

loop2_m:  
    # Comprueba si t3 es igual a t5, si es así, salta al final de loop2
    beq  t3, t5, end2_m
    
    # Carga un valor de la matriz A en fa0
    flw  fa0, 0(t0)
    
    # Guarda registros en la pila
    addi sp sp -28    # Reserva espacio en la pila
    sw ra 0(sp)       # Guarda el registro ra en la pila
    sw t0 4(sp)       # Guarda el registro t0 en la pila
    sw t1 8(sp)       # Guarda el registro t1 en la pila
    sw t2 12(sp)      # Guarda el registro t2 en la pila
    sw t3 16(sp)      # Guarda el registro t3 en la pila
    sw t4 20(sp)      # Guarda el registro t4 en la pila
    sw t5 24(sp)      # Guarda el registro t5 en la pila

    # Llama a la función seno
    jal ra sin

    # Recupera registros desde la pila
    lw t5 24(sp)      # Recupera t5 desde la pila
    lw t4 20(sp)      # Recupera t4 desde la pila
    lw t3 16(sp)      # Recupera t3 desde la pila
    lw t2 12(sp)      # Recupera t2 desde la pila
    lw t1 8(sp)       # Recupera t1 desde la pila
    lw t0 4(sp)       # Recupera t0 desde la pila
    lw ra 0(sp)       # Recupera ra desde la pila
    addi sp sp 28     # Libera espacio de la pila

    # Guarda el resultado en la matriz B
    fsw  fa0, 0(t1)

    # Actualiza los punteros a las matrices y los contadores
    addi t0, t0, 4     # Avanza el puntero en la matriz A
    addi t1, t1, 4     # Avanza el puntero en la matriz B
    addi t5, t5, 1     # Incrementa el contador de columnas

    # Vuelve al inicio de loop2
    beq  x0, x0, loop2_m

end2_m:  
    # Incrementa el contador t4
    addi t4, t4, 1     # Incrementa el contador de filas
    add  t5, zero, zero

    # Vuelve al inicio de loop1
    beq  x0, x0, loop1_m

end1_m:   
    # Retorna
    jr ra
sin:	  	
	
#declaracion de variables
	fmv.s ft0 fa0						# fa0 = x y lo movemos a ft0 = fa0										
	li t1 15							# limite contador
    li t0 0								# contador
    fcvt.s.w ft1 t0						# resultado final	ft = final
    
	
bucle_principal_seno:
	beq t0 t1 fin_bucle_principal_seno
    
#llamada a calculo de signo
	addi sp sp -8
    sw ra 0(sp)							#guardamos la direccion del seno
    fsw ft0 4(sp)						#guardamos el valor ft0 = x para las siguientes subrutinas
    
    
	jal ra signo_seno
    fmv.s ft2 fa0						# ft2 es el signo	ft2 = (-1)^n
	
    
    flw ft0 4(sp)						#recuperamos el valor ft0 = x para las siguientes subrutinas
    lw ra 0(sp)							#recuperamos la direccion del seno
    addi sp sp 8
    
    
    
#llamada a calculo factorial
	addi sp sp -12
    sw ra 0(sp)							#guardamos la direccion del seno
  	fsw ft0 4(sp)						#guardamos el valor ft0 = x para las siguientes subrutinas
    fsw ft2 8(sp)						#guardamos el valor del signo
    
    
	jal ra factorial_seno
	fmv.s ft3 fa0						#ft3 = (2n + 1)!
    
    
    flw ft2 8(sp)						#recuperamos el valor del signo
    flw ft0 4(sp)						#recuperamos el valor ft0 = x para las siguientes subrutinas
    lw ra 0(sp)							#recuperamos la direccion del seno
    addi sp sp 12
	
  
#llamada a calculo exponente
    addi sp sp -16
    sw ra 0(sp)							#guardamos la direccion del seno
    fsw ft0 4(sp)						#guardamos el valor ft0 = x para las siguientes subrutinas
    fsw ft2 8(sp)						#guardamos el valor del signo
    fsw ft3 12(sp)						#guardamos el valor del factorial
    
  
	jal ra exponente_seno
	fmv.s ft4 fa0						#ft4 = x^(2n + 1)
    
    
    flw ft3 12(sp)						#recuperamos el valor del factorial
    flw ft2 8(sp)						#recuperamos el valor del signo
    flw ft0 4(sp)						#recuperamos el valor ft0 = x para las siguientes subrutinas
    lw ra 0(sp)							#recuperamos la direccion del seno
    addi sp sp 16

#calc sumatorio
	
	fmul.s ft5 ft4 ft2					#multiplicamos el signo por el exponenete y guardamos en ft5 = ft4 * ft2
	fdiv.s ft5 ft5 ft3					#dividimos dicha multiuplicacion entre el factoril ft5 = ft5 / ft3
	fadd.s ft1 ft1 ft5					#y se lo añadimos al resultado final ft1 += ft5
    addi t0 t0 1						#sumamos uno al contador
	
	j bucle_principal_seno				#volvemos al inicio del buclepara empezar de nuevo

    
fin_bucle_principal_seno:				#n ha llegado a su fin
	fmv.s fa0 ft1						#y guardamos el resultado final en fa0 para retornarlo
        
    jr ra								#y acabamos la funcion
	
#calculo exponente_seno	

exponente_seno:
	
#declaracion de variables
    
    #calculo 2n + 1
	li t3 2								#establecemos t2 = 2
	mul t4 t3 t0						#multiplicamos 2 * n --> t4 = t3 * t2
    addi t4 t4 1						#y le sumamos 1 --> t4 += 1
	
	li t5 0								#inicio contador
	li t6 1								
	fcvt.s.w ft5 t6						#establecemos ft5 = 1
	
b_seno_exp:	
	beq t5 t4 fin_seno_exp				# ejecutamos el bucle del exponente mientras el contador no sea igual que la variable (2n+1)
	fmul.s ft5 ft5 ft0					#multiplicamos ft5 (que en la primera accion del grupo es 1) por ft0 (que es x)
	addi t5 t5 1						#le sumamos 1 al contador
    j b_seno_exp						#volvemos a iniciar el bucle
	
fin_seno_exp:
	fmv.s fa0 ft5						#pasamos el resulatdo final de exponente a fa0 para devolverlo
	jr ra								#acabamos la subrutina exponente
	

#calculo factorial_seno

factorial_seno:
	
#declaracion de variables

	#calculo 2n + 1
	li t3 2								#establecemos t2 = 2
	mul t4 t3 t0						#multiplicamos 2 * n --> t4 = t3 * t2
    addi t4 t4 1						#y le sumamos 1 --> t4 += 1
	fcvt.s.w ft5 t4
	
	li t5 0								#inicio contador
	li t6 1								#inico factorial, lo inicializamos a 1 y lo convertimos en flotante
	fcvt.s.w ft6 t6
	li t2 -1							#numero para restar y lo convertimos en flotante
	fcvt.s.w ft2 t2
	
	beq t0 x0 fin_seno_fact				#El factorial de 0 y 1 es 1 entonces hacemos una excepcion para no tener errores ya que siempre es uno y no hace falta calcular nada

	
b_seno_fact:							
	beq t5 t4 fin_seno_fact				#mientras que el contador no sea igual a (2n+1)
	fmul.s ft6 ft6 ft5					#multiplicamos el factorial por el siguiente numero
	fadd.s ft5 ft5 ft2					#sumamos uno al contador de la multiplicacion
    addi t5 t5 1						#sumamos 1 al contador
	j b_seno_fact						#volvemos a iniciar el bucle
	
fin_seno_fact:
	fmv.s fa0 ft6						#pasamos el resulatdo final de exponente a fa0 para devolverlo
	jr ra								#acabamos la subrutina factorial
    
#calculo de signo

signo_seno:

    li t2 2								#declarmos t2 como 2 para comprobar si es par o impar mediante la division y obteniendo el resto, si es 0 es para y si no impara
    li t3 1								# y t3 como 1 ya que si es impar se queda asi el resultado
	bgt t0 t1 bucle_principal_seno		#comprobamos que el contador aun siga siendo menor que el limite del bucle
	rem t5 t0 t2 						#obtenemos el resto en t5
	beq t5 x0 fin_signo_seno			#si t5 es 0 se queda t3 como esta sino se cambia
	li t3 -1							# se cambia t2=-1
	
fin_signo_seno:
	fcvt.s.w fa0 t3						#covertimos t3 a flotante y y lo dejamos en fa0 para retornarlo
    jr ra								#acabamos la subrutina signo
	